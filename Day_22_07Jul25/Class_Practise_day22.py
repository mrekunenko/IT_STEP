# Тема: Множини. Частина 2
# Завдання 1
# Користувач вводить числа через кому. Збережіть їх у
# множину. Також створіть власну множину з випадковими
# числами(12 шт). Виведіть наступну інформацію:
#  Максимальне та мінімальне число, введене
# користувачем, а також кількість чисел
#  Унікальні числа, введені користувачем, яких немає
# серед випадкових
#  Спільні числа, введені користувачем, які є серед
# випадкових
#  Усі числа, які є або в одній або в іншій множині

import random

# Завдання 1: Множини - Частина 2

# Введення чисел користувачем
user_input = input("Введіть числа через кому: ")
user_numbers = set(map(int, user_input.split(',')))

# Створення множини з 12 випадкових чисел
random_numbers = set(random.randint(1, 20) for _ in range(12))

print(f"Ваші числа: {user_numbers}")
print(f"Випадкові числа: {random_numbers}")
print()

# 1. Максимальне та мінімальне число користувача + кількість
print("**1. Інформація про ваші числа:**")
print(f"Максимальне число: {max(user_numbers)}")
print(f"Мінімальне число: {min(user_numbers)}")
print(f"Кількість чисел: {len(user_numbers)}")
print()

# 2. Унікальні числа користувача (яких немає серед випадкових)
unique_user = user_numbers - random_numbers
print("**2. Унікальні числа користувача:**")
print(f"Числа, яких немає серед випадкових: {unique_user}")
print()

# 3. Спільні числа (є в обох множинах)
common_numbers = user_numbers & random_numbers
print("**3. Спільні числа:**")
print(f"Числа, які є в обох множинах: {common_numbers}")
print()

# 4. Усі числа з обох множин
all_numbers = user_numbers | random_numbers
print("**4. Усі числа:**")
print(f"Всі числа з обох множин: {all_numbers}")


# Завдання 2
# Напишіть функцію, яка отримує список гостей (гості
# можуть повторюватись) та назву події. Потрібно вивести
# запрошення для кожного гостя і лише один раз.
# guests = ["Олена", "Ігор", "Марія", "Олена", "Ігор", "Сергій"]
# event = "День народження"

def send_invitations(guest_list, event_name):
    """
    Функція для відправки унікальних запрошень на подію

    Параметри:
        guest_list - список гостей (можуть бути дублікати)
        event_name - назва події
    """
    # Перетворюємо список на множину для автоматичного видалення дублікатів
    unique_guests = set(guest_list)

    print(f"Розсилаємо запрошення на подію '{event_name}':")
    print("=" * 40)

    for guest in unique_guests:
        print(f"Шановний(а) {guest}, запрошуємо Вас на {event_name}!")


# Приклад використання функції
guests = ["Олена", "Ігор", "Марія", "Олена", "Ігор", "Сергій"]
event = "День народження"

send_invitations(guests, event)


# Завдання 3
# Напишіть функцію, яка отримує два списки з назвами
# товарів для покупок двох знайомих людей. Виведіть наступне
# повідомлення:
#  Товари, які можна купити разом
#  Товари, які потрібні лише першій людині
#  Товари, які потрібні лише другій людині

def analyze_shopping_lists(list1, list2):
    """
    Аналізує списки покупок двох людей та виводить:
    - спільні товари
    - унікальні товари для кожної людини

    Параметри:
        list1 - список товарів першої людини
        list2 - список товарів другої людини
    """
    # Перетворюємо списки на множини
    set1 = set(list1)
    set2 = set(list2)

    print("Аналіз списків покупок:")
    print("=" * 35)

    # Спільні товари (перетин множин)
    common = set1 & set2
    print(f"Спільні товари: {common if common else 'немає'}")

    # Товари тільки першої людини (різниця множин)
    only_first = set1 - set2
    print(f"Тільки перша людина: {only_first if only_first else 'немає'}")

    # Товари тільки другої людини (різниця множин)
    only_second = set2 - set1
    print(f"Тільки друга людина: {only_second if only_second else 'немає'}")


# Вхідні дані
list1 = ["молоко", "хліб", "кава", "яблука", "чай"]
list2 = ["кава", "сир", "хліб", "банани"]

# Виклик функції
analyze_shopping_lists(list1, list2)


# Завдання 4
# Організатор конференції створив 3 списки учасників:
# зареєстровані, ті хто оплатив участь і ті хто підтвердив свою
# присутність
# Напишіть функцію, яка отримує ці 3 списки та виводить
# наступну інформацію:
#  Імена тих, хто зареєструвався, але не оплатив участь
#  Імена тих, хто підтвердив присутність, але не
# зареєстрований
#  Імена тих, хто оплатив участь, але не підтвердив
# присутність
#  Імена тих, хто зареєструвався і оплатив участь
#  Імена тих хто пройшов усі 3 етапи

def analyze_conference_participants(registered, paid, confirmed):
    """
    Аналізує учасників конференції за трьома списками:
    - зареєстровані
    - оплативші
    - підтвердивші присутність

    Повертає словник з 5 категоріями учасників.
    """
    reg = set(registered)
    p = set(paid)
    conf = set(confirmed)

    reg_not_paid = reg - p
    conf_not_reg = conf - reg
    paid_not_conf = p - conf
    reg_and_paid = reg & p
    all_steps = reg & p & conf

    result = {
        "Зареєстровані, але не оплатили": sorted(reg_not_paid),
        "Підтвердили, але не зареєстровані": sorted(conf_not_reg),
        "Оплатили, але не підтвердили": sorted(paid_not_conf),
        "Зареєстровані і оплатили": sorted(reg_and_paid),
        "Пройшли всі етапи": sorted(all_steps)
    }

    print("Аналіз учасників конференції:")
    print("=" * 40)
    for key, names in result.items():
        print(f"{key} ({len(names)}): {names if names else 'немає'}")

    return result

# Завдання 5
# Менеджер організовує навчання для своїх співробітників,
# для чого розділив їх на 3 групи, кожна з яких буде навчатись у
# свій день.
# Напишіть функцію, яка отримує 3 списки з іменами та
# список усіх співробітників. Потрібно перевірити чи не
# помилився менеджер, а саме
#  Чи не забули включити якогось співробітника(якщо так
# то вивести імена всіх, про кого забули)
#  Чи випадково немає співробітників, які опинились у
# двох групах(якщо так то теж вивести повідомлення)

def check_training_groups(group1, group2, group3, all_employees):
    """
    Перевіряє коректність розподілу співробітників по групах навчання.

    Параметри:
        group1, group2, group3 - списки співробітників у групах
        all_employees - список всіх співробітників
    """
    # Перетворюємо списки на множини
    g1, g2, g3 = set(group1), set(group2), set(group3)
    all_emp = set(all_employees)


